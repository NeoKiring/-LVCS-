ローカルバージョン管理システム（LVCS）
取扱説明書
________________________________________
目次
1.	はじめに
2.	システム要件
3.	インストール方法
4.	基本操作
5.	コマンドラインインターフェース（CLI）
6.	グラフィカルユーザーインターフェース（GUI）
7.	高度な機能
8.	トラブルシューティング
9.	付録：リファレンス
________________________________________
1. はじめに
ローカルバージョン管理システム（LVCS）は、プログラムコードや文書ファイルの変更履歴を簡単に管理するためのツールです。LVCS を使用することで、以下のことが可能になります：
•	ファイルの変更履歴を保存・追跡
•	過去のバージョンの閲覧・復元
•	異なるバージョン間の差分確認
•	複数の開発ラインを並行して管理（ブランチ機能）
•	開発ラインの統合（マージ機能）
LVCS は、コマンドラインインターフェース（CLI）とグラフィカルユーザーインターフェース（GUI）の両方を提供しており、ユーザーの好みに応じて選択できます。
________________________________________
2. システム要件
対応OS
•	Windows 11
必要なソフトウェア
•	Python 3.8以上
•	tkinter（GUIを使用する場合）
推奨環境
•	4GB以上のRAM
•	500MB以上の空きディスク容量
________________________________________
3. インストール方法
パッケージのインストール
1.	リポジトリをダウンロードまたはクローンします。
2.	コマンドプロンプトを開き、ダウンロードしたディレクトリに移動します。
3.	以下のコマンドを実行してインストールします：
bash
コピー
pip install -e .
インストールの確認
インストールが成功したことを確認するには、以下のコマンドを実行します：
bash
コピー
lvcs --version
バージョン情報が表示されれば、インストールは成功しています。
________________________________________
4. 基本操作
リポジトリの初期化
1.	コマンドプロンプトを開きます。
2.	バージョン管理したいディレクトリに移動します。
3.	以下のコマンドを実行します：
bash
コピー
lvcs init
これにより、現在のディレクトリに新しいリポジトリが作成されます。
ユーザー設定
リポジトリを初期化した後、ユーザー情報を設定します：
bash
コピー
lvcs config --name "あなたの名前" --email "あなたのメール@example.com"
この情報は、コミットの作者として記録されます。
基本的なワークフロー
1.	ファイルの追加：変更を追跡したいファイルをステージングエリアに追加します。 
bash
コピー
lvcs add ファイル名.txt
2.	変更の確認：現在の状態を確認します。 
bash
コピー
lvcs status
3.	変更の保存：ステージングされた変更をリポジトリに保存します。 
bash
コピー
lvcs commit -m "変更の説明"
4.	履歴の確認：これまでの変更履歴を確認します。 
bash
コピー
lvcs log
________________________________________
5. コマンドラインインターフェース（CLI）
コマンド一覧
リポジトリ操作
コマンド	説明	使用例
init	新しいリポジトリを初期化	lvcs init
config	リポジトリの設定を変更	lvcs config --name "名前" --email "メール"
ファイル操作
コマンド	説明	使用例
add	ファイルをステージングエリアに追加	lvcs add ファイル名.txt
status	リポジトリの状態を表示	lvcs status
diff	変更の差分を表示	lvcs diff ファイル名.txt
reset	ファイルをリセットまたはインデックスをクリア	lvcs reset ファイル名.txt
コミット操作
コマンド	説明	使用例
commit	ステージングされた変更をコミット	lvcs commit -m "メッセージ"
log	コミット履歴を表示	lvcs log
ブランチ操作
コマンド	説明	使用例
branch	ブランチを作成、削除、または一覧表示	lvcs branch 新ブランチ名
checkout	ブランチをチェックアウト	lvcs checkout ブランチ名
merge	指定したブランチを現在のブランチにマージ	lvcs merge ブランチ名
コマンド詳細
init
bash
コピー
lvcs init
現在のディレクトリに新しいリポジトリを作成します。.lvcs ディレクトリが作成され、バージョン管理に必要な構造が初期化されます。
config
bash
コピー
lvcs config --name "ユーザー名" --email "メールアドレス"
lvcs config --list
リポジトリの設定を変更します。--list オプションで現在の設定を表示します。
add
bash
コピー
lvcs add ファイル名.txt    # 特定のファイルを追加
lvcs add ディレクトリ名/   # ディレクトリ内のすべてのファイルを追加
lvcs add .                # 現在のディレクトリ内のすべての変更されたファイルを追加
ファイルをステージングエリアに追加します。これにより、次のコミットに含めるファイルを指定します。
status
bash
コピー
lvcs status
リポジトリの現在の状態を表示します。以下の情報が含まれます：
•	現在のブランチ
•	コミット予定の変更（ステージングされたファイル）
•	未ステージングの変更
•	未追跡のファイル
commit
bash
コピー
lvcs commit -m "コミットメッセージ"
ステージングされた変更をリポジトリに保存します。コミットメッセージは変更の内容を簡潔に説明するものを指定してください。
log
bash
コピー
lvcs log
lvcs log -n 5  # 直近5件のコミットのみ表示
コミット履歴を表示します。各コミットのハッシュ、作者、日付、およびメッセージが表示されます。
diff
bash
コピー
lvcs diff                # すべての変更の差分を表示
lvcs diff ファイル名.txt  # 特定のファイルの差分のみ表示
ワーキングディレクトリとステージングエリア間の変更差分を表示します。
branch
bash
コピー
lvcs branch              # ブランチ一覧を表示
lvcs branch 新ブランチ名  # 新しいブランチを作成
lvcs branch -d ブランチ名 # ブランチを削除
ブランチの作成、削除、および一覧表示を行います。
checkout
bash
コピー
lvcs checkout ブランチ名
指定したブランチに切り替えます。ワーキングディレクトリの内容が、そのブランチの最新コミットの状態に更新されます。
merge
bash
コピー
lvcs merge ブランチ名
指定したブランチを現在のブランチにマージします。
reset
bash
コピー
lvcs reset               # すべてのステージングをリセット
lvcs reset ファイル名.txt # 特定のファイルのステージングをリセット
lvcs reset --hard        # すべての変更を破棄してHEADの状態に戻す
ステージングエリアをリセットします。--hard オプションを使用すると、ワーキングディレクトリの変更も破棄されます。
________________________________________
6. グラフィカルユーザーインターフェース（GUI）
起動方法
コマンドプロンプトで以下のコマンドを実行します：
bash
コピー
lvcs-gui
メイン画面
GUI版を起動すると、以下の画面が表示されます：
1.	リポジトリ選択画面 
o	「既存のリポジトリを開く」：既存のリポジトリを選択します。
o	「新しいリポジトリを初期化」：新しいリポジトリを作成します。
2.	メイン画面 
o	リポジトリを選択すると、タブ形式でさまざまな操作が可能になります。
タブの説明
ステータスタブ
このタブでは、リポジトリ内のファイルの状態を確認できます。
•	変更されたファイル：リポジトリ内の変更されたファイルのリストが表示されます。 
o	ステージング済み：コミット予定のファイル
o	変更済み：変更されたがまだステージングされていないファイル
o	未追跡：新しく追加されたがまだ追跡されていないファイル
•	コンテキストメニュー（右クリック） 
o	追加：ファイルをステージングエリアに追加
o	差分を表示：ファイルの変更内容を表示
o	リセット：ファイルの変更を元に戻す
•	ボタン 
o	更新：ファイルリストを更新
o	すべて追加：すべての変更ファイルをステージングエリアに追加
o	差分を表示：選択したファイルの差分を表示
コミットタブ
このタブでは、ステージングされた変更をコミットできます。
•	コミット予定の変更：ステージングされたファイルのリスト
•	コミットメッセージ：変更内容を説明するメッセージを入力
•	ユーザー情報：コミットに記録される作者情報を設定
•	ボタン 
o	ユーザー情報を保存：ユーザー名とメールアドレスを保存
o	コミット：変更をリポジトリに保存
履歴タブ
このタブでは、コミット履歴を確認できます。
•	コミット履歴：過去のコミットのリスト（ハッシュ、メッセージ、作者、日付）
•	コミット詳細：選択したコミットの詳細情報
•	ボタン 
o	更新：コミット履歴を更新
o	詳細を表示：選択したコミットの詳細を表示
ブランチタブ
このタブでは、ブランチの作成、切り替え、マージを行えます。
•	ブランチリスト：リポジトリ内のブランチのリスト（現在のブランチにはアスタリスク（*）が付きます）
•	新規ブランチ作成：新しいブランチを作成
•	ブランチ操作 
o	チェックアウト：選択したブランチに切り替え
o	マージ：選択したブランチを現在のブランチにマージ
o	削除：選択したブランチを削除
•	ボタン 
o	ブランチリストを更新：ブランチリストを更新
________________________________________
7. 高度な機能
差分の詳細表示
bash
コピー
lvcs diff ファイル名.txt
このコマンドは、ファイルの変更内容を詳細に表示します。色分けされた出力により、追加された行（緑色）と削除された行（赤色）を簡単に識別できます。
リセットオプション
bash
コピー
lvcs reset --hard         # ハードリセット（すべての変更を破棄）
lvcs reset ファイル名.txt  # 特定のファイルのステージングをリセット
リセット機能には複数のモードがあります：
•	ソフトリセット（デフォルト）：ステージングのみをリセット
•	ハードリセット：ステージングと変更内容の両方をリセット
ブランチ戦略
効果的なブランチ戦略の例：
1.	機能ブランチモデル：新機能ごとに専用のブランチを作成 
bash
コピー
lvcs branch feature/新機能名
lvcs checkout feature/新機能名
# 開発作業
lvcs checkout master
lvcs merge feature/新機能名
2.	リリースブランチモデル：リリース準備専用のブランチを作成 
bash
コピー
lvcs branch release/v1.0
# 最終テストと修正
lvcs checkout master
lvcs merge release/v1.0
________________________________________
8. トラブルシューティング
一般的な問題と解決策
コマンドが見つからない
コピー
'lvcs' は内部コマンドまたは外部コマンド、操作可能なプログラムまたはバッチファイルとして認識されていません。
解決策：
•	Python とパッケージがパスに正しく設定されているか確認します。
•	インストールを再実行してみてください：pip install -e .
コミットができない
コピー
エラー: コミットするためのステージングされた変更はありません
解決策：
•	lvcs add コマンドでファイルをステージングエリアに追加してから再試行してください。
•	lvcs status で現在の状態を確認してください。
マージ時の競合
コピー
エラー: マージ中にエラーが発生しました
解決策：
•	競合ファイルを手動で編集して解決し、再度追加してコミットします。
•	競合を解決する前に、lvcs status で競合ファイルを確認してください。
GUI が起動しない
コピー
_tkinter モジュールがロードできません
解決策：
•	Python に tkinter がインストールされていることを確認します。
•	Windows では、Python インストーラーの「オプション機能」で「tcl/tk と IDLE」を選択して再インストールします。
________________________________________
9. 付録：リファレンス
ファイル構造
コピー
作業ディレクトリ/
├── .lvcs/                  # バージョン管理情報を格納するディレクトリ
│   ├── HEAD                # 現在のブランチを指すポインタファイル
│   ├── config              # リポジトリの設定ファイル
│   ├── index               # ステージングエリア情報
│   ├── objects/            # オブジェクト（ファイル、コミット、ツリー）格納
│   └── refs/               # 参照情報
│       └── heads/          # ブランチ情報
└── ... (作業ファイル)
コマンドオプション一覧
コマンド	オプション	説明
config	--name	ユーザー名を設定
	--email	メールアドレスを設定
	--list	現在の設定を表示
log	-n, --count	表示するコミット数を指定
branch	-d, --delete	ブランチを削除
reset	--hard	ハードリセットを実行
システム設計概要
LVCS は次のモジュール構成で設計されています：
•	repository.py - コアバージョン管理機能
•	cli.py - コマンドラインインターフェース
•	gui.py - グラフィカルユーザーインターフェース
•	vcs.py - CLI エントリーポイント
•	vcs_gui.py - GUI エントリーポイント
________________________________________
© LVCS 開発チーム

